// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}



/*model TodoList {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  userId    String
  user      Users    @relation(fields: [userId], references: [id])
  tasks     Tasks[]
}

model Users {
  id                String         @id @default(uuid()) @unique
  email             String
  password          String
  createdAt         DateTime       @default(now())
  Role              String         @default("USER") // USER, ADMIN
  sentRequests      UserFriends[]  @relation("UserFriends_User")
  receivedRequests  UserFriends[]  @relation("UserFriends_Friend")
  todoLists         TodoList[]
}

model Tasks {
  id          String   @id @default(uuid())
  title       String
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  todoListId  String
  todoList    TodoList @relation(fields: [todoListId], references: [id])
}

model UserFriends {
  id        String   @id @default(uuid())
  userId    String
  friendId  String
  status    String   @default("PENDING") // PENDING, ACCEPTED, REJECTED
  createdAt DateTime @default(now())

  user   Users @relation("UserFriends_User", fields: [userId], references: [id])
  friend Users @relation("UserFriends_Friend", fields: [friendId], references: [id])
}*/

model Todo {
  id        String   @id @default(uuid())
  title     String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
}






